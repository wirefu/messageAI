rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userID) {
      return isAuthenticated() && request.auth.uid == userID;
    }
    
    function isParticipant(participants) {
      return isAuthenticated() && request.auth.uid in participants;
    }
    
    // Users Collection
    match /users/{userID} {
      // Anyone authenticated can read user profiles (for finding conversation partners)
      allow read: if isAuthenticated();
      
      // Users can only create/update their own profile
      allow create: if isOwner(userID);
      allow update: if isOwner(userID);
      
      // Users can only delete their own profile
      allow delete: if isOwner(userID);
    }
    
    // Conversations Collection
    match /conversations/{conversationID} {
      // Only participants can read the conversation
      allow read: if isAuthenticated() && 
                     isParticipant(resource.data.participants);
      
      // Authenticated users can create conversations
      // Must include themselves as a participant
      allow create: if isAuthenticated() && 
                       request.auth.uid in request.resource.data.participants &&
                       request.resource.data.participants.size() == 2;
      
      // Only participants can update the conversation
      allow update: if isAuthenticated() && 
                       isParticipant(resource.data.participants);
      
      // Only participants can delete the conversation
      allow delete: if isAuthenticated() && 
                       isParticipant(resource.data.participants);
      
      // Messages Subcollection
      match /messages/{messageID} {
        // Only conversation participants can read messages
        allow read: if isAuthenticated() && 
                       isParticipant(get(/databases/$(database)/documents/conversations/$(conversationID)).data.participants);
        
        // Only participants can create messages
        // Must be the sender
        allow create: if isAuthenticated() && 
                         isParticipant(get(/databases/$(database)/documents/conversations/$(conversationID)).data.participants) &&
                         request.auth.uid == request.resource.data.senderID;
        
        // Only the sender or recipient can update message status
        allow update: if isAuthenticated() && 
                         isParticipant(get(/databases/$(database)/documents/conversations/$(conversationID)).data.participants);
        
        // Only participants can delete messages
        allow delete: if isAuthenticated() && 
                         isParticipant(get(/databases/$(database)/documents/conversations/$(conversationID)).data.participants);
      }
      
      // Action Items Subcollection
      match /actionItems/{actionItemID} {
        // Only conversation participants can access action items
        allow read, write: if isAuthenticated() && 
                              isParticipant(get(/databases/$(database)/documents/conversations/$(conversationID)).data.participants);
      }
      
      // Summaries Subcollection
      match /summaries/{summaryID} {
        // Only conversation participants can access summaries
        allow read, write: if isAuthenticated() && 
                              isParticipant(get(/databases/$(database)/documents/conversations/$(conversationID)).data.participants);
      }
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

